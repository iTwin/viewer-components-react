// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TreeComponent tests. ClassificationsTree renders correctly with children 1`] = `
<ClassificationsTree
  displayGuids={false}
  iModel={null}
  setIsDisplayGuids={[Function]}
/>
`;

exports[`TreeComponent tests. ComponentIndex renders correctly with children 1`] = `
<ComponentIndex
  displayGuids={false}
  iModel={null}
  setIsDisplayGuids={[Function]}
/>
`;

exports[`TreeComponent tests. SpatialContainmentTree by Discipline renders correctly with children 1`] = `
<SpatialContainmentTree
  displayGuids={false}
  groupByDiscipline={true}
  groupByType={false}
  iModel={null}
  setGroupByDiscipline={[Function]}
  setGroupByType={[Function]}
  setIsDisplayGuids={[Function]}
/>
`;

exports[`TreeComponent tests. SpatialContainmentTree by Type and Discipline renders correctly with children 1`] = `
<SpatialContainmentTree
  displayGuids={false}
  groupByDiscipline={true}
  groupByType={true}
  iModel={null}
  setGroupByDiscipline={[Function]}
  setGroupByType={[Function]}
  setIsDisplayGuids={[Function]}
/>
`;

exports[`TreeComponent tests. SpatialContainmentTree by Type renders correctly with children 1`] = `
<SpatialContainmentTree
  displayGuids={false}
  groupByDiscipline={false}
  groupByType={true}
  iModel={null}
  setGroupByDiscipline={[Function]}
  setGroupByType={[Function]}
  setIsDisplayGuids={[Function]}
/>
`;

exports[`TreeComponent tests. SpatialContainmentTree renders correctly with children 1`] = `
<SpatialContainmentTree
  displayGuids={false}
  groupByDiscipline={false}
  groupByType={false}
  iModel={null}
  setGroupByDiscipline={[Function]}
  setGroupByType={[Function]}
  setIsDisplayGuids={[Function]}
/>
`;

exports[`TreeComponent tests. TreeNodeWrapper renders correctly 1`] = `
<TreeNodeWrapper
  highlightingProps={
    Object {
      "searchText": "tree",
    }
  }
  itemsMapper={
    TreeNodeFunctionIconInfoMapper {
      "_TreeNodeClassFunctionIconInfoMap": Map {},
      "_functionIconInfos": Array [],
      "_globalFunctionIconInfos": Array [],
      "_groupNodeFunctionIconInfos": Array [],
      "_multipleNodesFunctionIconInfos": Array [],
      "_treeDataProvider": Object {
        "dispose": [Function],
        "getFilteredNodePaths": [Function],
        "getNodeKey": [Function],
        "getNodes": [Function],
        "getNodesCount": [Function],
        "imodel": null,
        "rulesetId": "breakdown-trees-react/RulesList",
      },
    }
  }
  node={null}
  selectedTreenodeCount={0}
  treeActions={null}
  treeModel={null}
>
  <div
    data-testid="nodeLoaded"
    onContextMenu={[Function]}
  >
    <div>
      <TreeNode
        isExpanded={[Function]}
        isLeaf={false}
        isLoading={[Function]}
        isSelected={[Function]}
        key="TreeNodeWrapper"
        label={
          <div
            className={undefined}
          >
            null
          </div>
        }
        level={1}
        onClick={[Function]}
        onClickExpansionToggle={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
      >
        <div
          aria-selected="true"
          className="core-tree-node is-selected"
          onClick={[Function]}
          onMouseDown={[Function]}
          onMouseMove={[Function]}
          role="treeitem"
          tabIndex={-1}
        >
          <div
            className="contents"
            style={
              Object {
                "marginLeft": 20,
              }
            }
          >
            <ProgressRadial
              indeterminate={true}
              size="x-small"
            >
              <div
                className="iui-progress-indicator-radial iui-indeterminate iui-x-small"
              >
                <svg
                  aria-hidden="true"
                  className="iui-radial"
                  viewBox="0 0 32 32"
                >
                  <circle
                    className="iui-track"
                    cx="16"
                    cy="16"
                    r="14"
                  />
                  <circle
                    className="iui-fill"
                    cx="16"
                    cy="16"
                    r="14"
                    style={
                      Object {
                        "strokeDashoffset": 0,
                      }
                    }
                  />
                </svg>
              </div>
            </ProgressRadial>
            <div>
              <Component
                key={[Function]}
              >
                <Component />
              </Component>
            </div>
          </div>
        </div>
      </TreeNode>
    </div>
    <div />
  </div>
</TreeNodeWrapper>
`;

exports[`TreeComponent tests. TreeWithRuleset renders correctly 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "onStateChange": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <ControlledTreeWrapper
    dataProvider={
      Object {
        "dispose": [Function],
        "getFilteredNodePaths": [Function],
        "getNodeKey": [Function],
        "getNodes": [Function],
        "getNodesCount": [Function],
        "imodel": null,
        "rulesetId": "breakdown-trees-react/RulesList",
      }
    }
    displayGuids={true}
    enableVisibility={false}
    iModel={null}
    loadedRuleset={
      Object {
        "$schema": "../../node_modules/@itwin/presentation-common/Ruleset.schema.json",
        "id": "itwin-breakdown-trees/SpatialBreakdown",
        "rules": Array [
          Object {
            "ruleType": "RootNodes",
            "specifications": Array [
              Object {
                "classes": Array [
                  Object {
                    "arePolymorphic": true,
                    "classNames": Array [
                      "CompositeElement",
                    ],
                    "schemaName": "SpatialComposition",
                  },
                ],
                "groupByClass": false,
                "groupByLabel": false,
                "instanceFilter": "NOT model.IsPrivate AND this.ComposingElement = NULL",
                "relatedInstances": Array [
                  Object {
                    "alias": "model",
                    "isRequired": true,
                    "relationshipPath": Object {
                      "direction": "Backward",
                      "relationship": Object {
                        "className": "ModelContainsElements",
                        "schemaName": "BisCore",
                      },
                      "targetClass": Object {
                        "className": "Model",
                        "schemaName": "BisCore",
                      },
                    },
                  },
                ],
                "specType": "InstanceNodesOfSpecificClasses",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"CompositeElement\\", \\"SpatialComposition\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "doNotSort": true,
                "groupByClass": false,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Backward",
                    "relationship": Object {
                      "className": "PhysicalSystemServicesSpatialElements",
                      "schemaName": "BisCore",
                    },
                    "targetClass": Object {
                      "className": "DistributionSystem",
                      "schemaName": "DistributionSystems",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"DistributionSystem\\", \\"DistributionSystems\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "doNotSort": true,
                "groupByClass": false,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Forward",
                    "relationship": Object {
                      "className": "DistributionSystemGroupsDistributionElements",
                      "schemaName": "DistributionSystems",
                    },
                    "targetClass": Object {
                      "className": "SpatialElement",
                      "schemaName": "Biscore",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"CompositeElement\\", \\"SpatialComposition\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "doNotSort": true,
                "groupByClass": false,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Forward",
                    "relationship": Object {
                      "className": "CompositeComposesSubComposites",
                      "schemaName": "SpatialComposition",
                    },
                    "targetClass": Object {
                      "className": "CompositeElement",
                      "schemaName": "SpatialComposition",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"CompositeElement\\", \\"SpatialComposition\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "groupByClass": true,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Forward",
                    "relationship": Object {
                      "className": "CompositeOverlapsSpatialElements",
                      "schemaName": "SpatialComposition",
                    },
                    "targetClass": Object {
                      "className": "SpatialElement",
                      "schemaName": "BisCore",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"CompositeElement\\", \\"SpatialComposition\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "groupByClass": true,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Forward",
                    "relationship": Object {
                      "className": "SpatialOrganizerReferencesSpatialElements",
                      "schemaName": "SpatialComposition",
                    },
                    "targetClass": Object {
                      "className": "SpatialElement",
                      "schemaName": "BisCore",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"CompositeElement\\", \\"SpatialComposition\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "groupByClass": true,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Forward",
                    "relationship": Object {
                      "className": "SpatialOrganizerHoldsSpatialElements",
                      "schemaName": "SpatialComposition",
                    },
                    "targetClass": Object {
                      "className": "SpatialElement",
                      "schemaName": "BisCore",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ContentDisplayType = \\"RelatedElementsRequest\\"",
            "ruleType": "Content",
            "specifications": Array [
              Object {
                "relationshipPaths": Array [
                  Array [
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "CompositeComposesSubComposites",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "CompositeOverlapsSpatialElements",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "ElementOwnsChildElements",
                        "schemaName": "BisCore",
                      },
                    },
                  ],
                ],
                "specType": "ContentRelatedInstances",
              },
              Object {
                "relationshipPaths": Array [
                  Array [
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "CompositeComposesSubComposites",
                        "schemaName": "SpatialComposition",
                      },
                      "targetClass": Object {
                        "className": "ISpatialOrganizer",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "SpatialOrganizerHoldsSpatialElements",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "ElementOwnsChildElements",
                        "schemaName": "BisCore",
                      },
                    },
                  ],
                ],
                "specType": "ContentRelatedInstances",
              },
              Object {
                "relationshipPaths": Array [
                  Array [
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "CompositeComposesSubComposites",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "SpatialOrganizerReferencesSpatialElements",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "ElementOwnsChildElements",
                        "schemaName": "BisCore",
                      },
                    },
                  ],
                ],
                "specType": "ContentRelatedInstances",
              },
              Object {
                "relationshipPaths": Array [
                  Array [
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "DistributionSystemGroupsDistributionElements",
                        "schemaName": "DistributionSystems",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "ElementOwnsChildElements",
                        "schemaName": "BisCore",
                      },
                    },
                  ],
                ],
                "specType": "ContentRelatedInstances",
              },
            ],
          },
        ],
      }
    }
    optionItems={Array []}
    searchTools={true}
    setIsDisplayGuids={[Function]}
    treeName="TreeWithRulesetTest"
    treeNodeIconMapper={
      TreeNodeFunctionIconInfoMapper {
        "_TreeNodeClassFunctionIconInfoMap": Map {},
        "_functionIconInfos": Array [],
        "_globalFunctionIconInfos": Array [],
        "_groupNodeFunctionIconInfos": Array [],
        "_multipleNodesFunctionIconInfos": Array [],
        "_treeDataProvider": Object {
          "dispose": [Function],
          "getFilteredNodePaths": [Function],
          "getNodeKey": [Function],
          "getNodes": [Function],
          "getNodesCount": [Function],
          "imodel": null,
          "rulesetId": "breakdown-trees-react/RulesList",
        },
      }
    }
  />
</ContextProvider>
`;

exports[`TreeComponent tests. TreeWithRuleset renders correctly with visibility 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "onStateChange": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <ControlledTreeWrapper
    dataProvider={
      Object {
        "dispose": [Function],
        "getFilteredNodePaths": [Function],
        "getNodeKey": [Function],
        "getNodes": [Function],
        "getNodesCount": [Function],
        "imodel": null,
        "rulesetId": "breakdown-trees-react/RulesList",
      }
    }
    displayGuids={true}
    enableVisibility={true}
    iModel={null}
    loadedRuleset={
      Object {
        "$schema": "../../node_modules/@itwin/presentation-common/Ruleset.schema.json",
        "id": "itwin-breakdown-trees/SpatialBreakdown",
        "rules": Array [
          Object {
            "ruleType": "RootNodes",
            "specifications": Array [
              Object {
                "classes": Array [
                  Object {
                    "arePolymorphic": true,
                    "classNames": Array [
                      "CompositeElement",
                    ],
                    "schemaName": "SpatialComposition",
                  },
                ],
                "groupByClass": false,
                "groupByLabel": false,
                "instanceFilter": "NOT model.IsPrivate AND this.ComposingElement = NULL",
                "relatedInstances": Array [
                  Object {
                    "alias": "model",
                    "isRequired": true,
                    "relationshipPath": Object {
                      "direction": "Backward",
                      "relationship": Object {
                        "className": "ModelContainsElements",
                        "schemaName": "BisCore",
                      },
                      "targetClass": Object {
                        "className": "Model",
                        "schemaName": "BisCore",
                      },
                    },
                  },
                ],
                "specType": "InstanceNodesOfSpecificClasses",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"CompositeElement\\", \\"SpatialComposition\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "doNotSort": true,
                "groupByClass": false,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Backward",
                    "relationship": Object {
                      "className": "PhysicalSystemServicesSpatialElements",
                      "schemaName": "BisCore",
                    },
                    "targetClass": Object {
                      "className": "DistributionSystem",
                      "schemaName": "DistributionSystems",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"DistributionSystem\\", \\"DistributionSystems\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "doNotSort": true,
                "groupByClass": false,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Forward",
                    "relationship": Object {
                      "className": "DistributionSystemGroupsDistributionElements",
                      "schemaName": "DistributionSystems",
                    },
                    "targetClass": Object {
                      "className": "SpatialElement",
                      "schemaName": "Biscore",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"CompositeElement\\", \\"SpatialComposition\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "doNotSort": true,
                "groupByClass": false,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Forward",
                    "relationship": Object {
                      "className": "CompositeComposesSubComposites",
                      "schemaName": "SpatialComposition",
                    },
                    "targetClass": Object {
                      "className": "CompositeElement",
                      "schemaName": "SpatialComposition",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"CompositeElement\\", \\"SpatialComposition\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "groupByClass": true,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Forward",
                    "relationship": Object {
                      "className": "CompositeOverlapsSpatialElements",
                      "schemaName": "SpatialComposition",
                    },
                    "targetClass": Object {
                      "className": "SpatialElement",
                      "schemaName": "BisCore",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"CompositeElement\\", \\"SpatialComposition\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "groupByClass": true,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Forward",
                    "relationship": Object {
                      "className": "SpatialOrganizerReferencesSpatialElements",
                      "schemaName": "SpatialComposition",
                    },
                    "targetClass": Object {
                      "className": "SpatialElement",
                      "schemaName": "BisCore",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ParentNode.IsOfClass(\\"CompositeElement\\", \\"SpatialComposition\\")",
            "ruleType": "ChildNodes",
            "specifications": Array [
              Object {
                "groupByClass": true,
                "groupByLabel": false,
                "relationshipPaths": Array [
                  Object {
                    "direction": "Forward",
                    "relationship": Object {
                      "className": "SpatialOrganizerHoldsSpatialElements",
                      "schemaName": "SpatialComposition",
                    },
                    "targetClass": Object {
                      "className": "SpatialElement",
                      "schemaName": "BisCore",
                    },
                  },
                ],
                "specType": "RelatedInstanceNodes",
              },
            ],
          },
          Object {
            "condition": "ContentDisplayType = \\"RelatedElementsRequest\\"",
            "ruleType": "Content",
            "specifications": Array [
              Object {
                "relationshipPaths": Array [
                  Array [
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "CompositeComposesSubComposites",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "CompositeOverlapsSpatialElements",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "ElementOwnsChildElements",
                        "schemaName": "BisCore",
                      },
                    },
                  ],
                ],
                "specType": "ContentRelatedInstances",
              },
              Object {
                "relationshipPaths": Array [
                  Array [
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "CompositeComposesSubComposites",
                        "schemaName": "SpatialComposition",
                      },
                      "targetClass": Object {
                        "className": "ISpatialOrganizer",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "SpatialOrganizerHoldsSpatialElements",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "ElementOwnsChildElements",
                        "schemaName": "BisCore",
                      },
                    },
                  ],
                ],
                "specType": "ContentRelatedInstances",
              },
              Object {
                "relationshipPaths": Array [
                  Array [
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "CompositeComposesSubComposites",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "SpatialOrganizerReferencesSpatialElements",
                        "schemaName": "SpatialComposition",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "ElementOwnsChildElements",
                        "schemaName": "BisCore",
                      },
                    },
                  ],
                ],
                "specType": "ContentRelatedInstances",
              },
              Object {
                "relationshipPaths": Array [
                  Array [
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "DistributionSystemGroupsDistributionElements",
                        "schemaName": "DistributionSystems",
                      },
                    },
                    Object {
                      "count": "*",
                      "direction": "Forward",
                      "relationship": Object {
                        "className": "ElementOwnsChildElements",
                        "schemaName": "BisCore",
                      },
                    },
                  ],
                ],
                "specType": "ContentRelatedInstances",
              },
            ],
          },
        ],
      }
    }
    optionItems={Array []}
    searchTools={true}
    setIsDisplayGuids={[Function]}
    treeName="TreeWithRulesetTest"
    treeNodeIconMapper={
      TreeNodeFunctionIconInfoMapper {
        "_TreeNodeClassFunctionIconInfoMap": Map {},
        "_functionIconInfos": Array [],
        "_globalFunctionIconInfos": Array [],
        "_groupNodeFunctionIconInfos": Array [],
        "_multipleNodesFunctionIconInfos": Array [],
        "_treeDataProvider": Object {
          "dispose": [Function],
          "getFilteredNodePaths": [Function],
          "getNodeKey": [Function],
          "getNodes": [Function],
          "getNodesCount": [Function],
          "imodel": null,
          "rulesetId": "breakdown-trees-react/RulesList",
        },
      }
    }
  />
</ContextProvider>
`;
