sep=;
Release Tag;API Item
public;AddFavoritePropertyContextMenuItem({ field, imodel, scope }: FavoritePropertiesContextMenuItemProps): JSX.Element | null
public;AncestorsNavigationControls({ navigateUp, navigateDown, canNavigateDown, canNavigateUp }: AncestorsNavigationControlsProps): JSX.Element | null
public;AncestorsNavigationControlsProps
public;ContextMenuItemProps
public;ContextMenuProps
public;CopyPropertyTextContextMenuItem({ record }: ContextMenuItemProps): JSX.Element
public;DataProviderProps
public;FavoritePropertiesContextMenuItemProps 
internal;FilteringPropertyGrid({ filterer, dataProvider, autoExpandChildCategories, ...props }: FilteringPropertyGridProps): JSX.Element
public;FilteringPropertyGridProps 
public;IModelAppUserPreferencesStorage 
internal;InstanceSelectionProps
public;MultiElementPropertyGrid({ ancestorsNavigationControls, ...props }: MultiElementPropertyGridProps): JSX.Element
public;MultiElementPropertyGridProps 
internal;NonEmptyValuesPropertyDataFilterer 
internal;NoopPropertyDataFilterer 
public;NullValueSettingContext({ children }: PropsWithChildren
internal;NullValueSettingContextValue
public;PreferencesStorage
public;PropertyGrid({ createDataProvider, ...props }: PropertyGridProps): JSX.Element
public;PropertyGridComponent({ preferencesStorage, ...props }: PropertyGridComponentProps): JSX.Element | null
public;PropertyGridComponentProps 
internal;PropertyGridContent({ dataProvider, imodel, contextMenuItems, className, onBackButton, headerControls, settingsMenuItems, ...props }: PropertyGridContentProps): JSX.Element
public;PropertyGridContentBaseProps 
public;PropertyGridContentProps = PropertyGridContentBaseProps & ContextMenuProps & SettingsMenuProps
public;PropertyGridContextMenuItem({ id, children, title, onSelect }: PropsWithChildren
public;PropertyGridContextMenuItemProps
public;PropertyGridManager
public;PropertyGridProps = Omit
public;PropertyGridSettingsMenuItem({ id, onClick, title, children }: PropsWithChildren
public;PropertyGridSettingsMenuItemProps
public;PropertyGridUiItemsProvider 
public;PropertyGridUiItemsProviderProps
public;PropertyGridWidgetId = "vcr:PropertyGridComponent"
public;RemoveFavoritePropertyContextMenuItem({ field, imodel, scope }: FavoritePropertiesContextMenuItemProps): JSX.Element | null
internal;SettingsDropdownMenu({ settingsMenuItems, dataProvider }: SettingsDropdownMenuProps): JSX.Element | null
internal;SettingsDropdownMenuProps 
public;SettingsMenuItemProps
public;SettingsMenuProps
public;ShowHideNullValuesSettingsMenuItem({ close, persist }: ShowHideNullValuesSettingsMenuItemProps): JSX.Element
public;ShowHideNullValuesSettingsMenuItemProps 
internal;SHOWNULL_KEY = "showNullValues"
public;SingleElementDataProviderProps 
public;SingleElementPropertyGrid({ instanceKey, createDataProvider, ...props }: SingleElementPropertyGridProps): JSX.Element
public;SingleElementPropertyGridProps = Omit
internal;UseContentMenuProps 
internal;useContextMenu({ dataProvider, imodel, contextMenuItems }: UseContentMenuProps):
internal;useDataProvider({ imodel, createDataProvider }: DataProviderProps &
internal;useInstanceSelection({ imodel }: InstanceSelectionProps):
internal;useNullValueSetting():
internal;useNullValueSettingContext(): NullValueSettingContextValue
public;usePropertyGridTransientState