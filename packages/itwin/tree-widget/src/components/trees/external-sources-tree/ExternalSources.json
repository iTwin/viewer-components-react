{
  "$schema": "../../../../node_modules/@itwin/presentation-common/Ruleset.schema.json",
  "id": "tree-widget-react/ExternalSources",
  "requiredSchemas": [
    {
      "name": "BisCore",
      "minVersion": "1.0.13"
    }
  ],
  "rules": [
    {
      "ruleType": "RootNodes",
      "specifications": [
        {
          "specType": "InstanceNodesOfSpecificClasses",
          "classes": [
            {
              "schemaName": "BisCore",
              "classNames": [
                "ExternalSource"
              ],
              "arePolymorphic": false
            }
          ],
          "relatedInstances": [
            {
              "relationshipPath": [
                {
                  "relationship": {
                    "schemaName": "BisCore",
                    "className": "SynchronizationConfigSpecifiesRootSources"
                  },
                  "direction": "Backward"
                }
              ],
              "isRequired": true,
              "alias": "configRoot"
            },
            {
              "relationshipPath": [
                {
                  "relationship": {
                    "schemaName": "BisCore",
                    "className": "ExternalSourceIsInRepository"
                  },
                  "direction": "Forward"
                }
              ],
              "isRequired": true,
              "alias": "repo"
            }
          ],
          "instanceFilter": "configRoot.ECInstanceId <> NULL",
          "groupByClass": false,
          "groupByLabel": false
        }
      ],
      "autoExpand": true
    },
    {
      "ruleType": "ChildNodes",
      "condition": "ParentNode.IsOfClass(\"ExternalSourceGroup\", \"BisCore\")",
      "specifications": [
        {
          "specType": "RelatedInstanceNodes",
          "relationshipPaths": [
            [
              {
                "relationship": {
                  "schemaName": "BisCore",
                  "className": "ExternalSourceGroupGroupsSources"
                },
                "direction": "Forward"
              }
            ]
          ],
          "groupByClass": false,
          "groupByLabel": false
        }
      ]
    },
    {
      "ruleType": "ChildNodes",
      "condition": "ParentNode.IsOfClass(\"ExternalSource\", \"BisCore\")",
      "specifications": [
        {
          "specType": "RelatedInstanceNodes",
          "relationshipPaths": [
            [
              {
                "relationship": {
                  "schemaName": "BisCore",
                  "className": "ExternalSourceOwnsAttachments"
                },
                "direction": "Forward"
              },
              {
                "relationship": {
                  "schemaName": "BisCore",
                  "className": "ExternalSourceAttachmentAttachesSource"
                },
                "direction": "Forward"
              }
            ]
          ],
          "groupByClass": false,
          "groupByLabel": false
        },
        {
          "specType": "CustomNode",
          "type": "T_ExternalSource_Elements",
          "label": "Elements",
          "hideIfNoChildren": true,
          "nestedRules": [
            {
              "ruleType": "ChildNodes",
              "specifications": [
                {
                  "specType": "RelatedInstanceNodes",
                  "relationshipPaths": [
                    [
                      {
                        "relationship": {
                          "schemaName": "BisCore",
                          "className": "ElementIsFromSource"
                        },
                        "direction": "Backward",
                        "targetClass": {
                          "schemaName": "BisCore",
                          "className": "ExternalSourceAspect"
                        }
                      },
                      {
                        "relationship": {
                          "schemaName": "BisCore",
                          "className": "ElementOwnsMultiAspects"
                        },
                        "direction": "Backward",
                        "targetClass": {
                          "schemaName": "BisCore",
                          "className": "GeometricElement"
                        }
                      }
                    ]
                  ],
                  "groupByClass": true,
                  "groupByLabel": false
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "ruleType": "InstanceLabelOverride",
      "class": {
        "schemaName": "BisCore",
        "className": "RepositoryLink"
      },
      "values": [
        {
          "specType": "Property",
          "propertyName": "UserLabel"
        }
      ]
    },
    {
      "ruleType": "InstanceLabelOverride",
      "class": {
        "schemaName": "BisCore",
        "className": "ExternalSource"
      },
      "values": [
        {
          "specType": "Composite",
          "separator": " - ",
          "parts": [
            {
              "spec": {
                "specType": "RelatedInstanceLabel",
                "pathToRelatedInstance": {
                  "relationship": {
                    "schemaName": "BisCore",
                    "className": "ExternalSourceIsInRepository"
                  },
                  "direction": "Forward"
                }
              }
            },
            {
              "spec": {
                "specType": "Property",
                "propertyName": "UserLabel"
              }
            }
          ]
        }
      ]
    },
    {
      "ruleType": "ExtendedData",
      "condition": "ThisNode.IsInstanceNode ANDALSO this.IsOfClass(\"ExternalSource\", \"BisCore\")",
      "items": {
        "imageId": "\"icon-document\""
      }
    },
    {
      "ruleType": "ExtendedData",
      "condition": "ThisNode.Type = \"T_ExternalSource_Elements\"",
      "items": {
        "imageId": "\"icon-ec-schema\""
      }
    },
    {
      "ruleType": "ExtendedData",
      "condition": "ThisNode.IsClassGroupingNode",
      "items": {
        "imageId": "\"icon-ec-class\""
      }
    },
    {
      "ruleType": "ExtendedData",
      "condition": "ThisNode.IsInstanceNode ANDALSO ThisNode.IsOfClass(\"GeometricElement\", \"BisCore\")",
      "items": {
        "imageId": "\"icon-item\""
      }
    }
  ]
}
